---
title: "loops_and_functions"
author: "OP"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

## **Part 1. For loops revisited**

### **Task 1**

Create two sequences, one called `weekdays` that contains days of the week (\"Monday\", \"Tuesday\", \"Wednesday\", etc.) and one called `transects` that contains the series of transect names \"Transect A\", \"Transect B,\"Transect C\". Write a nested for loop that creates a matrix containing the following

Monday - Transect A

```{r}
# 
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
transects <- c("Transect A", "Transect B", "Transect C")

matrix_out <- matrix(nrow = length(weekdays), ncol = length(transects))

for (i in seq_along(transects)){
  for(j in seq_along(weekdays)){
    day_transect <- paste(weekdays[j], "-", transects[i])
    matrix_out[j,i] <- day_transect
  }
}

matrix_out
```

## **Part 2. Functions introduced**

### **Task 2**

Write a function called `force` that calculates a force (in Newtons), given inputs of mass (in kg) and acceleration (in ms2 (recall: F=ma), and returns a statement \"The resulting force is \_\_\_ Newtons.\"

```{r}
# Function to calculate force value, Newtons
force <- function(mass_kg, acceleration_ms2){
  calculated_force <- return(mass_kg * acceleration_ms2)
  print(paste("The resulting force is",calculated_force, "in Newtons"))
}

force(50, 45)
```

### **Task 3**

The length:weight relationship for fish is: W=aLb, where where L is total fish length (centimeters), W is the expected fish weight (grams), and a and b are species-dependent parameter values (shown below for several fish from Peyton et al. 2016).

| sci_name            | common_name     |  a_est | b_est |
|:--------------------|:----------------|-------:|------:|
| Chanos chanos       | Milkfish        | 0.0905 |  2.52 |
| Sphyraena barracuda | Great barracuda | 0.0181 |  3.27 |
| Caranx ignobilis    | Giant trevally  | 0.0353 |  3.05 |

Recreate the table above as a data frame stored as `fish_parms`. Then, write a function called `fish_weight` that allows a user to only enter the *common name* (argument `fish_name`) and *total length* (argument `tot_length`) (in centimeters) of a fish, to return the expected fish weight in grams. Test it out for different species and lengths.

Now, try creating a vector of lengths (e.g. 0 to 100, by increments of 1) and ensuring that your function will calculate the fish weight over a *range* of lengths for the given species (try this for milkfish, storing the output weights as `milkfish_weights`.

```{r}
fish_parms <- data.frame(sci_name = c("Chanos chanos","Sphyraena barracuda","Caranx ignobilis" ),
                         common_name = c("Milkfish", "Great barracuda", "Giant trevally"),
                         a_est = c(0.0905, 0.0181, 0.0353),
                         b_est = c(2.52, 3.27, 3.05)
)

fish_weight <- function(fish_name, tot_length_cm){
  fish_details <- filter(fish_parms, common_name == fish_name)
  calculated_fish_weight = (fish_details$a_est * fish_details$b_est * tot_length_cm)
  return(paste(fish_name, "weight is", calculated_fish_weight))
}

fish_weight(fish_name = "Milkfish", tot_length_cm = 10)
```

### **Task 4**

Wave power (more accurately wave energy flux) in deep water is approximated by:

Pdeep=0.5H2T

where P is power in kWm (potential power per wave meter), H is wave height in meters (more specifically, the *significant wave height*), and T is the wave period in seconds. Learn more [**here**](https://en.wikipedia.org/wiki/Wave_power).

Write a function called `wave_power` that calculates potential ocean wave power given inputs of wave height and period.

Use your `wave_power` function to approximate wave power for a period of 8 seconds, over a range of wave heights from 0 to 3 meters by increments of 0.2 meters.

```{r}
wave_power <- function(wave_height_m, period_s){
  calculated_wave_power = (wave_height_m * period_s)
  return(calculated_wave_power)
}

wave_power(10, 5)


```

```{r}
wave_power_over_period <- wave_power(10, seq(from = 0, to = 3, by = 0.2))

wave_power_over_period
```

### **Task 5 (OPTIONAL)**

The wave energy equation changes based on ocean depth. Along the coast of Brenville, which has a very sharp shelf as the wave approaches the coast, wave energy is approximated using the deep ocean equation (the one you used above) for depths \> 12 meters, and a shallow equation for depths \<= 12 meters. The Brenville team estimates shallow wave power by:

Pshallow=0.81H2T

Create a function that requires inputs of water depth, wave height and period, then returns the approximated wave power using the correct equation for the depth entered. It should also include a message (hint: use `message()` just like you would use warning!) that lets the user know if the shallow or deep water equation was used.

```{r}
#  depths <= 12 meters
wave_power_depth <- function(water_depth, wave_height, wave_period){
  if (water_depth > 12){
    calculated_power_deep <- (wave_height * wave_period)
    message("I used equation for a deep water to determine wave power")
    return(calculated_power_deep)
  }
  else {
    calculated_power_shallow <- (0.81 * wave_height * 2 * wave_period)
    message("I used equation for a shallow water to determine wave power")
    return(calculated_power_shallow)
}
}

wave_power_depth(13, 5, 8)

```
